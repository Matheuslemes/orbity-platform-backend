server:
  port: 8091

spring:
  application:
    name: ms-pricing

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/pricing}
    username: ${DB_USER:pricing}
    password: ${DB_PASS:pricing}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        jdbc.time_zone: UTC
    open-in-view: false
    show-sql: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

  cache:
    type: redis
    redis:
      time-to-live: 10m
      cache-null-values: false

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:127.0.0.1:9094}
    admin:
      auto-create: false
    consumer:
      group-id: ms-pricing
      # auto-offset-reset: latest
      # EN: auto-offset-reset: latest

# mapas de tópicos (mantém prefixo 'pricing.kafka.*')
# EN: topic maps (keeps the 'pricing.kafka.*' prefix)
pricing:
  kafka:
    producer:
      topic-key: price-changed
      topics:
        price-changed:
          name: ${PRICE_CHANGED_TOPIC:pricing.price.changed.v1}
          partitions: 1
          replicas: 1
    consumer:
      topic-key: price-changed
      topics:
        price-changed:
          name: ${PRICE_CHANGED_TOPIC:pricing.price.changed.v1}
          concurrency: 1

  flyway:
    enabled: true
    clean-disabled: true        # evita 'clean' acidental em prod
    # EN: prevents accidental 'clean' in production
    # baseline-on-migrate: true  # habilite se precisar baselinar DB já existente
    # EN: baseline-on-migrate: true  # enable if you need to baseline an existing DB

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true

logging:
  level:
    org.hibernate.SQL: warn
    org.springframework.kafka: info
    org.postgresql: info

# PROFILE: secured → habilita OAuth2 Resource Server (Keycloak, etc.)
# EN: PROFILE: secured → enables OAuth2 Resource Server (Keycloak, etc.)
# Ative com: -Dspring.profiles.active=secured
# EN: Enable with: -Dspring.profiles.active=secured
---
spring:
  config:
    activate:
      on-profile: secured
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8085/realms/master}
          # jwk-set-uri: ${OAUTH2_JWKS_URI:http://localhost:8085/realms/master/protocol/openid-connect/certs}
          # EN: jwk-set-uri: ${OAUTH2_JWKS_URI:http://localhost:8085/realms/master/protocol/openid-connect/certs}
